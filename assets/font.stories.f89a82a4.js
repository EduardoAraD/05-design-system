var i=Object.defineProperty;var n=(o,t)=>i(o,"name",{value:t,configurable:!0});import"./index.6f46ab51.js";import{c as e,A as c,M as d}from"./Props.8e79df7b.js";import"./jsx-runtime.4c551521.js";import"./iframe.de26a46b.js";import"./runtime.4fb997ed.js";import{b as l}from"./index.95cd7776.js";import{T as u}from"./TokensGrid.17d2db7b.js";import"./string.dc4668a7.js";import"./index.8ef2fb0a.js";import"./es.map.constructor.15dfeadf.js";import"./es.number.to-fixed.36ea8723.js";function m(){return m=Object.assign?Object.assign.bind():function(o){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var s in a)Object.prototype.hasOwnProperty.call(a,s)&&(o[s]=a[s])}return o},m.apply(this,arguments)}n(m,"_extends");const y={},f="wrapper";function p({components:o,...t}){return e(f,m({},y,t,{components:o,mdxType:"MDXLayout"}),e(d,{title:"Tokens/Font Families",mdxType:"Meta"}),e("h1",null,"Font Families"),e(u,{tokens:l,mdxType:"TokensGrid"}))}n(p,"MDXContent");p.isMDXComponent=!0;const x=n(()=>{throw new Error("Docs-only story")},"__page");x.parameters={docsOnly:!0};const r={title:"Tokens/Font Families",includeStories:["__page"]},T={};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:()=>e(c,{mdxStoryNameToKey:T,mdxComponentAnnotations:r},e(p,null))};const k=["__page"];export{k as __namedExportsOrder,x as __page,r as default};
//# sourceMappingURL=font.stories.f89a82a4.js.map
